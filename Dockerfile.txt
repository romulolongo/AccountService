#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/core/aspnet:2.2-stretch-slim AS base
WORKDIR /app
EXPOSE 80


COPY AccountService.Services.Api.csproj AccountService.Services.Api/

COPY .././AccountService.Domain/AccountService.Domain.csproj AccountService.Domain/
COPY AccountService.Infra.Data/AccountService.Infra.Data.csproj AccountService.Infra.Data/
COPY AccountService.Infra.IoC/AccountService.Infra.IoC.csproj AccountService.Infra.IoC/
COPY AccountService.Application/AccountService.Application.csproj AccountService.Application/

RUN dotnet restore "src/AccountService.Services.Api/AccountService.Services.Api.csproj"
COPY . .
WORKDIR "/src/src/AccountService.Services.Api"
RUN dotnet build "AccountService.Services.Api.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "AccountService.Services.Api.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "AccountService.Services.Api.dll"]

#
#FROM mcr.microsoft.com/dotnet/core/sdk:2.2 AS build-env
#WORKDIR /app
#
## Copy csproj and restore as distinct layers
#COPY *.csproj ./
#RUN dotnet restore
#
## Copy everything else and build
#COPY . ./
#RUN dotnet publish -c Release -o out
#
## Build runtime image
#FROM mcr.microsoft.com/dotnet/core/aspnet:2.2
WORKDIR /app
COPY --from=build-env /app/out .
ENTRYPOINT ["dotnet", "aspnetapp.dll"]

